# In this configuration, the package is tested against multiple versions of python
# on Linux and on one version of Python on Windows. If and only if all tests pass
# will the wheels be built and deployed. Further, deployment is only initiated if
# the current branch is "master", the current commit is tagged, and the current
# repo is yours (e.g. it won't run on a Pull Request). For convenience, a source
# distribution is also created.

language: python
dist: bionic
cache: pip
python:
  - 3.7
  - 3.8
  - 3.9

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" = windows ]]; then
        choco install python --version 3.8.0
        export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
        # make sure it's on PATH as 'python3'
        ln -s /c/Python38/python.exe /c/Python38/python3.exe
    fi
install:
  - python3 -m pip install --only-binary=Cython,numpy -r requirements.txt

script:
  - make test

stages:
  - test
  # Only execute deployment stage on tagged commits, and from your repository
  # (e.g. not PRs). Replace with your repo name.
  - name: deploy
    if: tag IS PRESENT AND repo = cryptocoinserver/tulipy

jobs:
  include:

    # Deploy source distribution
    - stage: deploy
      name: Deploy source distribution
      install: pip install -r requirements.txt
      script: python3 setup.py sdist --formats=gztar
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing dist/*.tar.gz
    # Deploy on linux
    - stage: deploy
      name: Build and deploy Linux wheels
      services: docker
      install: python3 -m pip install cibuildwheel==1.12.0
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl
    # Deploy on mac
    - stage: deploy
      name: Build and deploy macOS wheels
      os: osx
      # PyPy 7.3.2 needs macOS >= 10.14
      osx_image: xcode10.2
      language: shell
      install: python3 -m pip install cibuildwheel==1.12.0
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl
    # Deploy on windows
    - stage: deploy
      name: Build and deploy Windows wheels
      os: windows
      language: shell
      install: python3 -m pip install cibuildwheel==1.12.0
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl
env:
  global:
    - TWINE_USERNAME=__token__
    # Note: TWINE_PASSWORD is set to a PyPI API token in Travis settings
    - CIBW_SKIP="cp27-* cp35-* pp27-*"
    - CIBW_ARCHS_MACOS="x86_64 universal2 arm64"
